/*
 * sync-wrangler
 * https://github.com/jchris/sync-wrangler
 *
 * Copyright (c) 2013 Chris Anderson
 * Licensed under the Apache license.
 */

var coax = require("coax");

function setupTempAdmin(authHost, cb) {
  var channelPass = Math.random().toString(12).slice(2)
  coax.put(authHost+"/channelServer", {
    name: "channelServer", password : channelPass,
    admin_channels : ["*"]
  }, function(err, ok) {
    if (err) {
      console.log("couldn't turn on channelServer access", err);
      cb(err)
    } else {
      var adminCreds = 'channelServer:'+channelPass;
      cb(false, adminCreds);
    }
  });
}

function revokeGuestAccess(allowed, authHost, cb) {
  if (!allowed) {
    // turn off guest access
    console.log("put guest "+authHost+"/GUEST")
    coax.put(authHost+"/GUEST", {
      disabled : true,
      admin_channels : []
    }, function(err, ok) {
      if (err) {
        console.log("couldn't turn off GUEST access", err);
        // process.exit(-1);
      }
      cb(err);
    });
  } else {
    console.log("running in GUEST mode")
    cb();
  }
}


function pushSyncDDoc(gatewayDb, opts, cb) {
  // install sync function
  console.log("put ddoc in db "+gatewayDb);

  coax(gatewayDb+"/_design").forceSave({
      _id : "channels",
      sync : opts.sync,
      validate_doc_update : opts.validate_doc_update
    }, function(err, ok){
      if (err) {
        console.log("couldn't push sync ddoc: "+JSON.stringify(err));
        cb(err);
      } else {
        console.log("pushed sync ddoc");
        cb();
      }
    });
}

exports.setup = function(opts, cb) {
  var authHost = "http://"+opts.host + ':' + opts.authPort,
    authPath = authHost + "/"+opts.bucket+"/user";

  // revokeGuestAccess(opts.guest, authPath, function(err1) {
      var gatewayDb = authHost + '/' + opts.bucket;
      pushSyncDDoc(gatewayDb, opts, function(err3){
        if (err1 || err3) {
          console.log("error: "+JSON.stringify([err1, err3]))
          cb(err1 || err3)
        } else {
          console.log("configured: "+gatewayDb)
          cb()
        }
      });
  });
}
